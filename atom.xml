<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>imunew's tech blog</title>
 <link href="http://imunew.github.io/" rel="self"/>
 <link href="http://imunew.github.io"/>
 <updated>2013-11-17T17:39:51+09:00</updated>
 <id>http://imunew.github.io</id>
 <author>
   <name>Name Lastname</name>
   <email>blah@email.test</email>
 </author>

 
 <entry>
   <title>Symfony2 + PHPUnitではじめてのテスト（単体テスト編）</title>
   <link href="http://imunew.github.io/test/2013/11/17/symfony2-phpunit-first-unit-test"/>
   <updated>2013-11-17T00:00:00+09:00</updated>
   <id>http://imunew.github.io/test/2013/11/17/symfony2-phpunit-first-unit-test</id>
   <content type="html">&lt;h2 id=&#39;id15&#39;&gt;まずは導入してみよう&lt;/h2&gt;
&lt;p&gt;なぜ、テストコードを書くのか、テストコードはどう書くべきか、といった話はおいといて、今回はとにかくテストコードを書いて実行してみるということを目的とします。
&lt;/p&gt;
&lt;h3 id=&#39;phpunitcomposer&#39;&gt;PHPUnitのインストール(composer)&lt;/h3&gt;
&lt;p&gt;さっそくインストールからはじめましょう。&lt;br /&gt;
今回はタイトルにもあるようにSymfony2(2.3)環境にPHPUnit(3.7)を導入します。&lt;br /&gt;
composer.jsonに下記記述を追加し、updateすれば、インストールは完了です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;http://phpunit.de/manual/3.7/ja/installation.html#installation.composer&#39;&gt;第3章 PHPUnit のインストール - phpunit&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;quot;require-dev&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        &lt;span class=&#39;nt&#39;&gt;&amp;quot;phpunit/phpunit&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;3.7.*&amp;quot;&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#39;id16&#39;&gt;さっそくやってみよう&lt;/h2&gt;
&lt;p&gt;はじめにこれを読みましょう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;http://symfony.com/doc/current/book/testing.html&#39;&gt;Testing - Symfony(current)&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&#39;http://docs.symfony.gr.jp/symfony2/book/testing.html&#39;&gt;テスト - Symfony2日本語ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#39;id17&#39;&gt;ユニットテスト&lt;/h3&gt;
&lt;p&gt;下記のようなシンプルなクラスがあるとします。&lt;br /&gt;
年月を指定して、月初もしくは月末を取得するだけのクラスですが、実際に使う前に単体である何パターンかテストしておきたいところです。
&lt;/p&gt;&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;cp&#39;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;namespace&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Sopra\CoreBundle\Helper&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTime&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;class&lt;/span&gt; &lt;span class=&#39;nc&#39;&gt;DateTimeHelper&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;private&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;__construct&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;  &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;static&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;getFirstDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$year&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$month&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;k&#39;&gt;return&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;new&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTime&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#39;si&#39;&gt;$year&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;si&#39;&gt;$month&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;-01&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;static&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;getLastDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$year&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$month&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;k&#39;&gt;return&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;new&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTime&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;date&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Y-m-d&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;mktime&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;0&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;0&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;0&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$month&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;0&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$year&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)));&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;そこで、下記のようなテストケースを作成します。
&lt;/p&gt;&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;cp&#39;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;namespace&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Sopra\CoreBundle\Tests\Helper&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Sopra\CoreBundle\Helper\DateTimeHelper&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Sopra\CoreBundle\Tests\TestCase\BaseTestCase&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;class&lt;/span&gt; &lt;span class=&#39;nc&#39;&gt;DateTimeHelperTest&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;extends&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;BaseTestCase&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;testGetFirstDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$firstDay&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTimeHelper&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getFirstDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;2013&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;assertEquals&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;2013-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$firstDay&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;format&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Y-m-d&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;));&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$firstDay&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTimeHelper&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getFirstDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;2013&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;12&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;assertEquals&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;2013-12-01&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$firstDay&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;format&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Y-m-d&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;));&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$firstDay&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTimeHelper&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getFirstDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;2014&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;3&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;assertEquals&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;2014-03-01&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$firstDay&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;format&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Y-m-d&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;));&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;testGetLastDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$lastDay&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTimeHelper&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getLastDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;2012&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;2&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;assertEquals&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;2012-02-29&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$lastDay&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;format&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Y-m-d&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;));&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$lastDay&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTimeHelper&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getLastDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;2013&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;2&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;assertEquals&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;2013-02-28&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$lastDay&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;format&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Y-m-d&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;));&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$lastDay&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;DateTimeHelper&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getLastDayInMonth&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;2013&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;12&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;assertEquals&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;2013-12-31&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$lastDay&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;format&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Y-m-d&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;));&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#39;id18&#39;&gt;テストの実行&lt;/h4&gt;
&lt;p&gt;作成したテストを実行するために、phpunitコマンドを実行します。&lt;br /&gt;
phpunitコマンドについては、本家サイトに詳しい説明がありますので参照ください。&lt;br /&gt;
[コマンドラインのテストランナー - PHPUnit](http://phpunit.de/manual/3.7/ja/textui.html)
実際に上述のDateTimeHelperTestを実行してみると、下記のように出力されます。
&lt;/p&gt;&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;&lt;span class=&#39;nv&#39;&gt;$ &lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;cd &lt;/span&gt;bin
&lt;span class=&#39;nv&#39;&gt;$ &lt;/span&gt;./phpunit -c ../app/ ../src/Sopra/CoreBundle/Tests/Helper/DateTimeHelperTest.php
PHPUnit 3.7.27 by Sebastian Bergmann.

Configuration &lt;span class=&#39;nb&#39;&gt;read &lt;/span&gt;from /path/to/Application Root/app/phpunit.xml

..

Time: 353 ms, Memory: 16.25Mb

OK &lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;2 tests, 6 assertions&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Symfony2 + PHPUnitではじめてのテスト（モック編）</title>
   <link href="http://imunew.github.io/test/2013/11/17/symfony2-phpunit-first-mocking"/>
   <updated>2013-11-17T00:00:00+09:00</updated>
   <id>http://imunew.github.io/test/2013/11/17/symfony2-phpunit-first-mocking</id>
   <content type="html">&lt;h2 id=&#39;id11&#39;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;単体テスト、機能テストについては、下記を参照してください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/test/2013/11/11/symfony2-phpunit-first-unit-test/&#39;&gt;Symfony2 + PHPUnitではじめてのテスト（単体テスト編）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;/test/2013/11/11/symfony2-phpunit-first-functional-test/&#39;&gt;Symfony2 + PHPUnitではじめてのテスト（機能テスト編）&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#39;id12&#39;&gt;モックを使ってみる&lt;/h2&gt;
&lt;p&gt;依存しているオブジェクトをシミュレートするのが難しいときに、オブジェクトをモック（代用）に置き換えるのが非常に有効です。
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;http://phpunit.de/manual/current/ja/test-doubles.html#test-doubles.mock-objects&#39;&gt;モックオブジェクト - phpunit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sopraでは、決済モジュールをモックに置き換えてテストしたりしています。&lt;br /&gt;
決済モジュールをテストする際は、サンドボックス環境を利用するのですが、エラーを細かくシミュレートできないので、エラーの内容ごとに分岐する処理を作る場合に困ってしまいます。&lt;br /&gt;
&lt;/p&gt;&lt;p&gt;そこでPHPUnitのMockオブジェクトを利用し、期待通りの処理結果（エラーオブジェクト）を返却するようにテストケースを実装します。
&lt;/p&gt;
&lt;h3 id=&#39;id13&#39;&gt;実装サンプル&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#39;https://gitlab.hitomedia.jp/sopra/tree/master/src/Sopra/BatchBundle/Tests/Command/CaptureCommandTest.php&#39;&gt;実装サンプル - gitlab.hitomedia.jp&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#39;id14&#39;&gt;さいごに&lt;/h2&gt;
&lt;p&gt;自分自身、時間がないことを言い訳に、テストコードを書かずに、これまで過ごしてきましたが、一度はじめてしまうと、癖になりそうな感覚はあります。&lt;br /&gt;
テストを書いて良かったなと思うことは、以下のとおりです。
&lt;/p&gt;
&lt;p&gt;- テストコードを実行してみつかる不具合がある - テストコードを書いているうちに、実装部分のリファクタリングが進むことがある - 同じ条件で繰り返しテストを実行できる - とにかく安心できる - テストコードはときに取り扱い説明書になる&lt;/p&gt;
&lt;p&gt;ただ、小さいチームがはじめてテストコードを書く場合は注意が必要かと思います。（あくまで個人的な意見です）
&lt;/p&gt;
&lt;p&gt;- はじめること、続けることが大事 - テストを義務にしない - 自分のために書く - いきなり大きなテストを書かない - テストを書きすぎない（実装とのバランスを考える） - 実環境でのテストが不要になるわけではない&lt;/p&gt;
&lt;p&gt;
これを機に社内にテストコードを書くエンジニアが増えてきたら、カバレッジ分析、自動テストなどに取り組んでいきたいと思います。
&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Symfony2 + PHPUnitではじめてのテスト（機能テスト編）</title>
   <link href="http://imunew.github.io/test/2013/11/17/symfony2-phpunit-first-functional-test"/>
   <updated>2013-11-17T00:00:00+09:00</updated>
   <id>http://imunew.github.io/test/2013/11/17/symfony2-phpunit-first-functional-test</id>
   <content type="html">&lt;h2 id=&#39;id1&#39;&gt;さっそくやってみよう&lt;/h2&gt;
&lt;p&gt;導入方法および単体テストについては、下記を参照ください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;/test/2013/11/11/symfony2-phpunit-first-unit-test/&#39;&gt;Symfony2 + PHPUnitではじめてのテスト（単体テスト編）&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#39;controller&#39;&gt;機能テスト（Controller編）&lt;/h3&gt;

&lt;h4 id=&#39;id2&#39;&gt;テストケースの作成&lt;/h4&gt;

&lt;p&gt;コントローラーをconsoleから作成すると、テストケースももれなく作成されます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;http://symfony.com/doc/current/bundles/SensioGeneratorBundle/commands/generate_controller.html&#39;&gt;Generating a New Controller - Symfony(current)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The generate:controller command generates a new Controller including actions, &lt;strong&gt;tests&lt;/strong&gt;, templates and routing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#39;https://github.com/sensiolabs/SensioGeneratorBundle/blob/master/Generator/ControllerGenerator.php&#39;&gt;ControllerGenerator.php - Github&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;x&#39;&gt;$this-&amp;gt;renderFile(&amp;#39;controller/ControllerTest.php.twig&amp;#39;, $dir.&amp;#39;/Tests/Controller/&amp;#39;.$controller.&amp;#39;ControllerTest.php&amp;#39;, $parameters);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;自動生成されたテストケースは下記のようなイメージ&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;cp&#39;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;namespace&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Sopra\WebBundle\Tests\Controller&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Symfony\Bundle\FrameworkBundle\Test\WebTestCase&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;class&lt;/span&gt; &lt;span class=&#39;nc&#39;&gt;MypageControllerTest&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;extends&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;WebTestCase&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#39;id3&#39;&gt;環境変数を設定&lt;/h4&gt;

&lt;p&gt;必要に応じて、phpunit.xmlに変数設定を追加します。&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;xml&#39;&gt;&lt;span class=&#39;nt&#39;&gt;&amp;lt;phpunit&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;c&#39;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;lt;php&amp;gt;&lt;/span&gt;
        &lt;span class=&#39;nt&#39;&gt;&amp;lt;server&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;name=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;KERNEL_DIR&amp;quot;&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;value=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;../app/&amp;quot;&lt;/span&gt; &lt;span class=&#39;nt&#39;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&#39;nt&#39;&gt;&amp;lt;server&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;name=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;SERVER_NAME&amp;quot;&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;value=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;local.sopra.jp&amp;quot;&lt;/span&gt; &lt;span class=&#39;nt&#39;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&#39;nt&#39;&gt;&amp;lt;server&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;name=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;SERVER_PORT&amp;quot;&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;value=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;80&amp;quot;&lt;/span&gt; &lt;span class=&#39;nt&#39;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&#39;nt&#39;&gt;&amp;lt;server&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;name=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;SCRIPT_NAME&amp;quot;&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;value=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#39;nt&#39;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&#39;nt&#39;&gt;&amp;lt;server&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;name=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;REQUEST_URI&amp;quot;&lt;/span&gt; &lt;span class=&#39;na&#39;&gt;value=&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#39;nt&#39;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;lt;/php&amp;gt;&lt;/span&gt;
    &lt;span class=&#39;c&#39;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class=&#39;nt&#39;&gt;&amp;lt;/phpunit&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#39;id4&#39;&gt;テストメソッドの実装&lt;/h4&gt;
&lt;p&gt;大まかにいうとテストメソッドの処理フローは以下のようになります。&lt;/p&gt;&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;x&#39;&gt;// &amp;#39;test&amp;#39;で始まるpublic関数を定義&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;public function testExecuteSuccess() {&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    // 必要に応じて環境変数を設定&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    // 準備（データの初期化など）&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    // ページにアクセス&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    // テストしたい処理を実行（送信ボタンをクリックなど）&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    // 結果を検証&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#39;sopra&#39;&gt;実践してみよう（sopraの場合）&lt;/h2&gt;

&lt;p&gt;sopraで実際に実装したときに、つまづいた点などを中心にポイントを解説していきます。&lt;/p&gt;

&lt;h3 id=&#39;id5&#39;&gt;ログイン&lt;/h3&gt;
&lt;p&gt;ログインが必要なページをテストする場合は、ログイン状態をシミュレートしなければいけません。&lt;br /&gt;
symfony.comに説明があるので、ほぼそのとおり実装しました。&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;http://symfony.com/doc/current/cookbook/testing/simulating_authentication.html&#39;&gt;How to simulate Authentication with a Token in a Functional Test (current) - Symfony&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;x&#39;&gt;private function logIn()&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;{&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    $session = $this-&amp;gt;client-&amp;gt;getContainer()-&amp;gt;get(&amp;#39;session&amp;#39;);&lt;/span&gt;

&lt;span class=&#39;x&#39;&gt;    $firewall = &amp;#39;secured_area&amp;#39;;&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    $token = new UsernamePasswordToken(&amp;#39;admin&amp;#39;, null, $firewall, array(&amp;#39;ROLE_ADMIN&amp;#39;));&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    $session-&amp;gt;set(&amp;#39;_security_&amp;#39;.$firewall, serialize($token));&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    $session-&amp;gt;save();&lt;/span&gt;

&lt;span class=&#39;x&#39;&gt;    $cookie = new Cookie($session-&amp;gt;getName(), $session-&amp;gt;getId());&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    $this-&amp;gt;client-&amp;gt;getCookieJar()-&amp;gt;set($cookie);&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#39;doctrin_fixtures_bundle&#39;&gt;テスト用データの投入（Doctrin Fixtures Bundleの導入）&lt;/h3&gt;

&lt;p&gt;テストを実行するたびにデータを手動で投入していたのでは、意味が無いので、Doctrin Fixtures Bundleを導入することにしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;http://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html&#39;&gt;DoctrineFixturesBundle - Symfony&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;quot;require&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        &lt;span class=&#39;nt&#39;&gt;&amp;quot;doctrine/doctrine-fixtures-bundle&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;dev-master&amp;quot;&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;sopraでは、いったんテーブルをtruncateしてからデータを投入するようにしています。&lt;/p&gt;&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;cp&#39;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;namespace&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Sopra\CoreBundle\DataFixtures\Helper&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Doctrine\ORM\EntityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;class&lt;/span&gt; &lt;span class=&#39;nc&#39;&gt;EntityHelper&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;private&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$entityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;__construct&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;EntityManager&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$entityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;entityManager&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$entityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;truncateTables&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$tables&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$connection&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;entityManager&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getConnection&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;();&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$platform&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$connection&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getDatabasePlatform&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;();&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$connection&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;exec&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;SET FOREIGN_KEY_CHECKS = 0&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;

        &lt;span class=&#39;k&#39;&gt;foreach&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$tables&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;as&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$table&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
            &lt;span class=&#39;nv&#39;&gt;$connection&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;exec&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$platform&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getTruncateTableSQL&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$table&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;));&lt;/span&gt;
        &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$connection&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;exec&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;SET FOREIGN_KEY_CHECKS = 1&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
    
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;#8216;SET FOREIGN_KEY_CHECKS = 0&amp;#8217;は外部キーを無視するために実行していますが、mysql固有の関数なので修正必要ですね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;http://dev.mysql.com/doc/refman/5.1/ja/innodb-foreign-key-constraints.html&#39;&gt;MySQL 5.1 リファレンスマニュアル :: 13.5.6.4 FOREIGN KEY 制約&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;さらに、テストケースからFixtureをloadするために、別のHelperクラスを実装しています。&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;cp&#39;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;namespace&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Sopra\CoreBundle\DataFixtures\Helper&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Doctrine\Common\DataFixtures\Executor\ORMExecutor&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Doctrine\Common\DataFixtures\FixtureInterface&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Doctrine\Common\DataFixtures\Loader&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Doctrine\ORM\EntityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Symfony\Component\DependencyInjection\ContainerAwareInterface&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;use&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Symfony\Component\DependencyInjection\ContainerInterface&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;class&lt;/span&gt; &lt;span class=&#39;nc&#39;&gt;FixturesHelper&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;private&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$container&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;private&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$entityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;__construct&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;ContainerInterface&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$container&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;EntityManager&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$entityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;container&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$container&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;entityManager&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$entityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
    
    &lt;span class=&#39;k&#39;&gt;public&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;loadFixtures&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$fixtures&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
        
        &lt;span class=&#39;nv&#39;&gt;$loader&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;new&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Loader&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;();&lt;/span&gt;
        &lt;span class=&#39;k&#39;&gt;foreach&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$fixtures&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;as&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;$fixture&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
            &lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$fixture&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;instanceof&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;ContainerAwareInterface&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
                &lt;span class=&#39;nv&#39;&gt;$fixture&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;setContainer&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;container&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
            &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
            &lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$fixture&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;instanceof&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;FixtureInterface&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
                &lt;span class=&#39;nv&#39;&gt;$loader&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;addFixture&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$fixture&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
            &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
        &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$executor&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;new&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;ORMExecutor&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$this&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;entityManager&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
        &lt;span class=&#39;nv&#39;&gt;$executor&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;execute&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;$loader&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#39;na&#39;&gt;getFixtures&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(),&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
    &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
    
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;各Fixtureからサービスコンテナにアクセスするために、ContainerAwareInterfaceを実装します。 sopraでは、EntityHelperに渡すEntityManagerを取得するために、setContainerしています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;http://symfony.com/doc/current/bundles/DoctrineFixturesBundle/#using-the-container-in-the-fixtures&#39;&gt;Using the Container in the Fixtures - Symfony&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;各クラス、インターフェイスの関係をクラス図にまとめると下記のようになります。&lt;/p&gt;
&lt;a href=&#39;/images/data_fixtures.png&#39;&gt;
&lt;img src=&#39;/images/data_fixtures.png&#39; /&gt;
&lt;/a&gt;
&lt;h3 id=&#39;id6&#39;&gt;ページにアクセス&lt;/h3&gt;

&lt;p&gt;ページへのアクセスはSymfony\Bundle\FrameworkBundle\Clientオブジェクトを通じて行いますので、setupメソッドにて生成し、メンバ変数にセットしておきます。&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;x&#39;&gt;namespace Sopra\WebBundle\Tests\TestCase;&lt;/span&gt;

&lt;span class=&#39;x&#39;&gt;use Symfony\Bundle\FrameworkBundle\Client;&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;&lt;/span&gt;

&lt;span class=&#39;x&#39;&gt;abstract class BaseWebTestCase extends WebTestCase {&lt;/span&gt;

&lt;span class=&#39;x&#39;&gt;    /** @var Client */&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;    private $client;&lt;/span&gt;

&lt;span class=&#39;x&#39;&gt;    protected function setUp() {&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        parent::setUp();&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        $this-&amp;gt;client = static::createClient();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Client::requestメソッドにてページにアクセスします。 リダイレクトされる場合はfollowRedirectし、戻り値のcrawlerオブジェクトを取得します。&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;x&#39;&gt;$this-&amp;gt;getClient()-&amp;gt;request(&amp;#39;GET&amp;#39;, &amp;#39;/path/to/page&amp;#39;);&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;$crawler = $this-&amp;gt;getClient()-&amp;gt;followRedirect();&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;/* @var $crawler Symfony\Component\DomCrawler\Crawler */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#39;id7&#39;&gt;テストしたい処理を実行&lt;/h3&gt;

&lt;p&gt;&amp;#8216;Submit&amp;#8217;ボタンをクリックして、レスポンスを取得する場合は、下記のような実装になります。&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;x&#39;&gt;$form = $crawler-&amp;gt;selectButton(&amp;#39;Submit&amp;#39;)-&amp;gt;form();&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;        &lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;$this-&amp;gt;getClient()-&amp;gt;submit($form);&lt;/span&gt;
&lt;span class=&#39;x&#39;&gt;$crawler = $this-&amp;gt;getClient()-&amp;gt;followRedirect();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#39;id8&#39;&gt;結果を検証&lt;/h3&gt;

&lt;p&gt;結果ページに&amp;#8217;Success&amp;#8217;という文字列が含まれているかどうかを確認するには、下記のような実装になります。&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;php&#39;&gt;&lt;span class=&#39;x&#39;&gt;$this-&amp;gt;assertTrue($crawler-&amp;gt;filter(&amp;#39;html:contains(&amp;quot;Success&amp;quot;)&amp;#39;)-&amp;gt;count() &amp;gt; 0);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&#39;Success&#39;と言う文字列が一つも含まれない場合は、その時点でテスト失敗となります。
上記のassertTrue意外にも、PHPUnitにはあらかじめ様々なアサーションメソッドが用意されています。
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;http://phpunit.de/manual/3.7/ja/writing-tests-for-phpunit.html#writing-tests-for-phpunit.assertions&#39;&gt;アサーション - phpunit&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#39;id9&#39;&gt;実装サンプル&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#39;https://gitlab.hitomedia.jp/sopra/tree/master/src/Sopra/WebBundle/Tests/Controller/WalletControllerTest.php&#39;&gt;実装サンプル - gitlab.hitomedia.jp&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#39;id10&#39;&gt;テスト実行&lt;/h2&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;&lt;span class=&#39;nv&#39;&gt;$ &lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;cd &lt;/span&gt;bin
&lt;span class=&#39;nv&#39;&gt;$ &lt;/span&gt;./phpunit -c ../app/ ../src/Sopra/WebBundle/Tests/Controller/WalletControllerTest.php
PHPUnit 3.7.27 by Sebastian Bergmann.

Configuration &lt;span class=&#39;nb&#39;&gt;read &lt;/span&gt;from /Users/imura/workspace/sopra/app/phpunit.xml

.....

Time: 7.95 seconds, Memory: 51.50Mb

OK &lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;5 tests, 33 assertions&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 
</feed>